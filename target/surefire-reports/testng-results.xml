<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="14" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="DEvents_API_TestSuite" duration-ms="38695" started-at="2019-11-20T19:26:28 IST" finished-at="2019-11-20T19:27:07 IST">
    <groups>
    </groups>
    <test name="DEvents_API_Tests" duration-ms="38695" started-at="2019-11-20T19:26:28 IST" finished-at="2019-11-20T19:27:07 IST">
      <class name="com.DEvents.tests.TestAPI_GetParticipants_demo">
        <test-method status="PASS" signature="getResponse()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="getResponse" is-config="true" duration-ms="5364" started-at="2019-11-20T19:26:38 IST" description="To make the API Request and capture the Response by sourcing data from Excel" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponse -->
        <test-method status="PASS" signature="testSetup()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="testSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkContentEncoding" duration-ms="0" started-at="2019-11-20T19:26:44 IST" description="Validating Content Encoding" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.checkContentEncoding()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkContentType" duration-ms="0" started-at="2019-11-20T19:26:44 IST" description="Validating Content-Type" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=SUCCESS method=TestAPI_GetParticipants_demo.checkContentEncoding()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="1" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TestAPI_GetParticipants_demo.checkContentType()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.checkContentType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkStatusCode" duration-ms="0" started-at="2019-11-20T19:26:44 IST" description="Validating Status Code" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.checkStatusCode() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TestAPI_GetParticipants_demo.checkStatusCode()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.checkResponseTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResponseTime" duration-ms="0" started-at="2019-11-20T19:26:44 IST" description="Validating Response time to be less than 5sec" depends-on-methods="com.DEvents.tests.TestAPI_GetParticipants_demo.checkStatusCode" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="1" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=SUCCESS method=TestAPI_GetParticipants_demo.checkResponseTime()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.validateJSONSchema()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="validateJSONSchema()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="validateJSONSchema" duration-ms="8" started-at="2019-11-20T19:26:44 IST" description="Validating JSON-Schema of Response" depends-on-methods="com.DEvents.tests.TestAPI_GetParticipants_demo.checkStatusCode" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateJSONSchema -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateJSONSchema status=SUCCESS method=TestAPI_GetParticipants_demo.validateJSONSchema()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResponseBody" duration-ms="22596" started-at="2019-11-20T19:26:44 IST" description="Validating Response body data against DB" depends-on-methods="com.DEvents.tests.TestAPI_GetParticipants_demo.checkStatusCode, com.DEvents.tests.TestAPI_GetParticipants_demo.validateJSONSchema" finished-at="2019-11-20T19:27:07 IST">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[DB hit failed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: DB hit failed.
at com.DEvents.coreFramework.DBConnectivity.dbResultSet2xlsx(DBConnectivity.java:164)
at com.DEvents.tests.TestAPI_GetParticipants_demo.checkResponseBody(TestAPI_GetParticipants_demo.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants_demo.checkResponseBody() throws java.lang.ClassNotFoundException,java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:27:07 IST" finished-at="2019-11-20T19:27:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseBody status=FAILURE method=TestAPI_GetParticipants_demo.checkResponseBody()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants_demo@29ca901e]" name="teardown" is-config="true" duration-ms="0" started-at="2019-11-20T19:27:07 IST" finished-at="2019-11-20T19:27:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.DEvents.tests.TestAPI_GetParticipants_demo -->
      <class name="com.DEvents.tests.TestAPI_GetParticipants">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="setup" is-config="true" duration-ms="124" started-at="2019-11-20T19:26:28 IST" finished-at="2019-11-20T19:26:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getResponse()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="getResponse" is-config="true" duration-ms="9442" started-at="2019-11-20T19:26:28 IST" description="To make the API Request and capture the Response by sourcing data from Excel" finished-at="2019-11-20T19:26:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponse -->
        <test-method status="PASS" signature="testSetup()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="testSetup" is-config="true" duration-ms="5" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="methodSetup" is-config="true" duration-ms="2" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants.checkContentEncoding()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkContentEncoding" duration-ms="3" started-at="2019-11-20T19:26:43 IST" description="Validating Content Encoding" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkContentType" duration-ms="0" started-at="2019-11-20T19:26:43 IST" description="Validating Content-Type" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants.checkContentType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentEncoding status=SUCCESS method=TestAPI_GetParticipants.checkContentEncoding()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContentType status=SUCCESS method=TestAPI_GetParticipants.checkContentType()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants.checkStatusCode() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkStatusCode" duration-ms="0" started-at="2019-11-20T19:26:43 IST" description="Validating Status Code" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStatusCode status=SUCCESS method=TestAPI_GetParticipants.checkStatusCode()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants.checkResponseTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResponseTime status=SUCCESS method=TestAPI_GetParticipants.checkResponseTime()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResponseTime" duration-ms="0" started-at="2019-11-20T19:26:43 IST" description="Validating Response time to be less than 5sec" depends-on-methods="com.DEvents.tests.TestAPI_GetParticipants.checkStatusCode" finished-at="2019-11-20T19:26:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="validateJSONSchema()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="validateJSONSchema" duration-ms="1223" started-at="2019-11-20T19:26:43 IST" description="Validating JSON-Schema of Response" depends-on-methods="com.DEvents.tests.TestAPI_GetParticipants.checkStatusCode" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateJSONSchema -->
        <test-method status="PASS" signature="methodSetup(java.lang.reflect.Method)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="methodSetup" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:43 IST" finished-at="2019-11-20T19:26:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.DEvents.tests.TestAPI_GetParticipants.validateJSONSchema()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method status="PASS" signature="checkResults(org.testng.ITestResult)[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="checkResults" is-config="true" duration-ms="0" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateJSONSchema status=SUCCESS method=TestAPI_GetParticipants.validateJSONSchema()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResults -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="teardown" is-config="true" duration-ms="1" started-at="2019-11-20T19:26:44 IST" finished-at="2019-11-20T19:26:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="fullteardown()[pri:0, instance:com.DEvents.tests.TestAPI_GetParticipants@4bec1f0c]" name="fullteardown" is-config="true" duration-ms="271" started-at="2019-11-20T19:27:07 IST" finished-at="2019-11-20T19:27:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullteardown -->
      </class> <!-- com.DEvents.tests.TestAPI_GetParticipants -->
    </test> <!-- DEvents_API_Tests -->
  </suite> <!-- DEvents_API_TestSuite -->
</testng-results>
